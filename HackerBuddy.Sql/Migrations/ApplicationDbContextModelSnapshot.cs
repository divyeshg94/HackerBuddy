// <auto-generated />
using System;
using HackerBuddy.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HackerBuddy.Sql.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HackerBuddy.Sql.Models.Conversation", b =>
                {
                    b.Property<int>("ConversationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConversationID"));

                    b.Property<int>("FromPersonID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToPersonID")
                        .HasColumnType("int");

                    b.HasKey("ConversationID");

                    b.HasIndex("FromPersonID");

                    b.HasIndex("ToPersonID");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Hackathon", b =>
                {
                    b.Property<int>("HackathonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HackathonID"));

                    b.Property<DateTime>("HackathonDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HackathonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HackathonID");

                    b.ToTable("Hackathons");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookingForRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.PersonSkill", b =>
                {
                    b.Property<int>("PersonSkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonSkillID"));

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("SkillType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonSkillID");

                    b.HasIndex("PersonID");

                    b.HasIndex("SkillID");

                    b.ToTable("PersonSkills");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Requirement", b =>
                {
                    b.Property<int>("RequirementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementID"));

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("RequirementID");

                    b.HasIndex("SkillID");

                    b.HasIndex("TeamID");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HackathonID")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamID");

                    b.HasIndex("HackathonID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamMemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamMemberID"));

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("TeamMemberID");

                    b.HasIndex("PersonID");

                    b.HasIndex("TeamID");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Conversation", b =>
                {
                    b.HasOne("HackerBuddy.Sql.Models.Person", "FromPerson")
                        .WithMany("SentConversations")
                        .HasForeignKey("FromPersonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HackerBuddy.Sql.Models.Person", "ToPerson")
                        .WithMany("ReceivedConversations")
                        .HasForeignKey("ToPersonID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromPerson");

                    b.Navigation("ToPerson");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.PersonSkill", b =>
                {
                    b.HasOne("HackerBuddy.Sql.Models.Person", "Person")
                        .WithMany("PersonSkills")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackerBuddy.Sql.Models.Skill", "Skill")
                        .WithMany("PersonSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Requirement", b =>
                {
                    b.HasOne("HackerBuddy.Sql.Models.Skill", "Skill")
                        .WithMany("Requirements")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackerBuddy.Sql.Models.Team", "Team")
                        .WithMany("Requirements")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Team", b =>
                {
                    b.HasOne("HackerBuddy.Sql.Models.Hackathon", "Hackathon")
                        .WithMany("Teams")
                        .HasForeignKey("HackathonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hackathon");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.TeamMember", b =>
                {
                    b.HasOne("HackerBuddy.Sql.Models.Person", "Person")
                        .WithMany("TeamMembers")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HackerBuddy.Sql.Models.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Hackathon", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Person", b =>
                {
                    b.Navigation("PersonSkills");

                    b.Navigation("ReceivedConversations");

                    b.Navigation("SentConversations");

                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Skill", b =>
                {
                    b.Navigation("PersonSkills");

                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("HackerBuddy.Sql.Models.Team", b =>
                {
                    b.Navigation("Requirements");

                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
